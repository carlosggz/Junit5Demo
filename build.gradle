plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'org.springframework.experimental.aot' version '0.10.2-SNAPSHOT'
    id 'org.graalvm.buildtools.native' version '0.9.1'
    id 'org.hibernate.orm'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    maven { url 'https://repo.spring.io/snapshot' }
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.3")
    set('testcontainersVersion', "1.16.0")
    set('springBootVersion', '2.5.3')
    set('lombokVersion', '1.18.20')
    set('springCloudStreamVersion', "3.1.3")
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-mail:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation 'org.flywaydb:flyway-core:7.12.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.0.3'
    implementation "org.springframework.cloud:spring-cloud-stream:${springCloudStreamVersion}"
    implementation "org.springframework.cloud:spring-cloud-stream-binder-rabbit:${springCloudStreamVersion}"
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    implementation 'com.github.spullara.mustache.java:compiler:0.9.10'
    implementation 'commons-net:commons-net:20030805.205232'
    implementation "org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-websocket:${springBootVersion}"

    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"
    testImplementation "org.testcontainers:postgresql:${testcontainersVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testImplementation 'com.h2database:h2:1.4.200'
    testImplementation 'com.github.javafaker:javafaker:1.0.2'
    testImplementation "com.github.tomakehurst:wiremock:2.27.2"
    testImplementation 'com.icegreen:greenmail-junit5:1.6.4'
    testImplementation 'org.awaitility:awaitility:4.1.0'
    testImplementation "org.springframework.cloud:spring-cloud-stream-test-support:${springCloudStreamVersion}"
    testImplementation 'org.mockftpserver:MockFtpServer:2.8.0'
    testImplementation('it.ozimov:embedded-redis:0.7.3') {
        exclude group: "org.slf4j", module: "slf4j-simple"
    }

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

bootBuildImage {
    builder = 'paketobuildpacks/builder:tiny'
    environment = ['BP_NATIVE_IMAGE': 'true']
}

hibernate {
    enhance {
        enableLazyInitialization = true
        enableDirtyTracking = true
        enableAssociationManagement = true
        enableExtendedEnhancement = false
    }
}
